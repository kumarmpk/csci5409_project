{"version":3,"sources":["Home.js","Header.js","Search.js","GetAll.js","Login.js","OrderPage.js","SearchHistory.js","OrderedHistory.js","NotFound.js","HomePage.js","App.js","serviceWorker.js","index.js","errormessages.js","constants.js"],"names":["Home","props","state","className","style","width","Component","Header","handleLogout","e","localStorage","removeItem","history","push","Navbar","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","session_token","Button","onClick","this","variant","withRouter","Search","handleLoadingClose","setState","loading","onChange","errorMsg","target","name","value","onSearch","preventDefault","searchText","search","trim","apiCall","errMsg","tableFlag","jobpart","url","CONST","COMP_X_URL","axios","get","then","res","resList","data","result","length","statusCode","message","catch","err","response","error","url2","COMP_Z_URL","post","console","log","key","Math","random","jobName","Modal","show","onHide","centered","closeButton","Title","Body","Footer","color","fontFamily","type","placeholder","border","borderRadius","searchResults","GetAll","jobparts","objList","uniq","find","c","map","Login","handleChange","onLoginSubmit","validationErrorFlag","validEmail","test","String","email","toLowerCase","password","match","params","userId","pathname","obj","username","status","setItem","htmlFor","required","OrderPage","handleModalClose","modalFlag","modalRoute","modalMsg","onOrder","requestDetails","selectedList","stateList","selected","Object","keys","partId","parseInt","avlQty","reqQty","partName","orderBackendCall","orderObj","partsFromX","jobRes","compxURL","jobs","partIdList","jobpartObj","qty","jobpartList","compyURL","COMP_Y_URL","partObj","qoh","getJobDetails","getPartDetails","errorRes","newSelected","assign","ordRes","requestObj","jobList","resZ","compzURL","includes","input","resCheck","prepareOrderDetails","ord","checkOrderUser","updateOrderDetailsinZ","resz","handleCheckbox","checked","SearchHistory","searchHistory","date","time","OrderedHistory","orderedHistory","list","i","len","dateStr","Date","setDate","getDate","conv","toDateString","NotFound","HomePage","location","Tabs","defaultActiveKey","Tab","eventKey","title","App","exact","path","component","render","to","Boolean","window","hostname","createBrowserHistory","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"gMA+BeA,E,kDA5Bb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,qDAMjB,OACE,6BACE,yBAAKC,UAAU,WACb,yBAAKA,UAAU,QACb,wBAAIA,UAAU,yBAAd,4BACA,wBAAIA,UAAU,uBAAd,YACA,yBAAKA,UAAU,sBAAsBC,MAAO,CAAEC,MAAO,QACnD,uBAAGF,UAAU,6BAAb,uKAG6C,2CAAoB,IAHjE,sFAK0B,qCAL1B,kB,GAdKG,a,0BCEbC,E,kDACJ,WAAYN,GAAQ,IAAD,8BACjB,cAAMA,IAIRO,aAAe,SAACC,GACdC,aAAaC,WAAW,UACxBD,aAAaC,WAAW,iBACxB,EAAKV,MAAMW,QAAQC,KAAK,MANxB,EAAKX,MAAQ,GAFI,E,qDAYjB,OACE,6BACE,yBAAKC,UAAU,UACb,kBAACW,EAAA,EAAD,CAAQX,UAAU,4BAA4BY,OAAO,MACnD,kBAACD,EAAA,EAAOE,MAAR,CAAcb,UAAU,8BAA8Bc,KAAK,KAA3D,QAGA,kBAACH,EAAA,EAAOI,OAAR,CACEC,gBAAc,mBACdhB,UAAU,+BAFZ,QAMA,kBAACW,EAAA,EAAOM,SAAR,CAAiBC,GAAG,oBAClB,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAIC,KAAL,CACEpB,UAAU,8BACVc,KAAK,WAFP,UAMA,kBAACK,EAAA,EAAIC,KAAL,CACEpB,UAAU,8BACVc,KAAK,WAFP,iBAODP,aAAac,cACZ,kBAACC,EAAA,EAAD,CACEtB,UAAU,0BACVuB,QAASC,KAAKnB,aACdoB,QAAQ,IAER,uBAAGzB,UAAU,yBAEb,a,GAjDGG,aA0DNuB,cAAWtB,G,4FCiJXuB,E,kDAxMb,WAAY7B,GAAQ,IAAD,8BACjB,cAAMA,IAUR8B,mBAAqB,SAACtB,GACpB,EAAKuB,SAAS,CAAEC,SAAS,KAZR,EAenBC,SAAW,SAACzB,GAAO,IAAD,EAChB,EAAKuB,UAAL,GACEG,SAAU,IADZ,cAEG1B,EAAE2B,OAAOC,KAAO5B,EAAE2B,OAAOE,OAF5B,qCAGuB,GAHvB,KAhBiB,EAuFnBC,SAAW,SAAC9B,GACVA,EAAE+B,iBACF,IAAIC,EAAa,EAAKvC,MAAMwC,QAC5BD,EAAaA,EAAWE,QAGtB,EAAKC,QAAQH,GAEb,EAAKT,SAAS,CACZG,SAAUU,IAAO,GACjBC,WAAW,EACXb,SAAS,KAhGb,EAAK/B,MAAQ,CACX6C,QAAS,GACTL,OAAQ,GACRI,WAAW,EACXX,SAAU,GACVF,SAAS,GAPM,E,6FAuBLQ,G,uFACZd,KAAKK,SAAS,CACZC,SAAS,IAGPe,EAAMC,IAAMC,WAAN,0BAAsCT,G,SAE1CU,IACHC,IAAIJ,GACJK,MAAK,SAACC,GACL,IAAIC,EAAU,GACVD,EAAIE,KAAKC,QACXF,EAAUD,EAAIE,KAAKC,SAEJF,EAAQG,OACrB,EAAK1B,SAAS,CACZe,QAASQ,EAAQ,GACjBT,WAAW,EACXX,SAAU,GACVF,SAAS,IAGX,EAAKD,SAAS,CACZG,SAAUU,IAAO,IACjBZ,SAAS,EACTc,QAAS,KAGoB,MAAxBO,EAAIE,KAAKG,WAClB,EAAK3B,SAAS,CACZG,SAAUmB,EAAIE,KAAKI,QACnB3B,SAAS,IAGX,EAAKD,SAAS,CACZG,SAAUU,IAAO,GACjBZ,SAAS,OAId4B,OAAM,SAACC,GACFA,EAAIC,SACN,EAAK/B,SAAS,CACZc,WAAW,EACXX,SAAU2B,EAAIC,SAASP,KAAKQ,MAC5B/B,SAAS,IAGX,EAAKD,SAAS,CACZc,WAAW,EACXX,SAAUU,IAAO,GACjBZ,SAAS,O,cAKbgC,EAAOhB,IAAMiB,WAAN,eAA2BvC,KAAKzB,MAAMwC,Q,SAE3CS,IACHgB,KAAKF,GACLZ,MAAK,SAACC,GAAD,OAASc,QAAQC,IAAIf,MAC1BO,OAAM,SAACC,GAAD,OAASM,QAAQC,IAAIP,M,6IAoB9B,IAAMf,EAAUpB,KAAKzB,MAAM6C,QAE3B,OACE,6BACGpB,KAAKzB,MAAM4C,UACV,6BACE,yBAAK3C,UAAU,yBACb,2BAAOA,UAAU,qBACf,2BAAOA,UAAU,SACf,4BACE,yCAGJ,+BACGwB,KAAKzB,MAAM6C,QACV,wBAAIuB,IAAKC,KAAKC,UACZ,4BACE,uBAAGvD,KAAI,iBAAY8B,EAAQ0B,UACxB1B,EAAQ0B,WAKf,wBAAIH,IAAKC,KAAKC,UACZ,+DAQZ,8BAEF,kBAACE,EAAA,EAAD,CACEC,KAAMhD,KAAKzB,MAAM+B,QACjB2C,OAAQjD,KAAKI,mBACb8C,UAAQ,GAER,kBAACH,EAAA,EAAMnE,OAAP,CAAcuE,aAAW,GACvB,kBAACJ,EAAA,EAAMK,MAAP,iBAEF,kBAACL,EAAA,EAAMM,KAAP,gDACA,kBAACN,EAAA,EAAMO,OAAP,KACE,kBAACxD,EAAA,EAAD,CAAQG,QAAQ,YAAYF,QAASC,KAAKI,oBAA1C,c,+BAUR,OACE,6BACE,yBAAK5B,UAAU,oBACb,uBAAGA,UAAU,YAAYC,MAAO,CAAE8E,MAAO,QACtCvD,KAAKzB,MAAMiC,SAAWR,KAAKzB,MAAMiC,SAAW,MAE/C,wBACEhC,UAAU,8CACVC,MAAO,CAAE+E,WAAY,SAFvB,eAMA,yBAAKhF,UAAU,2BAA2BC,MAAO,CAAEC,MAAO,QACxD,8BACE,2BACE+E,KAAK,OACLC,YAAY,SACZlF,UAAU,UACVkC,KAAK,SACLC,MAAOX,KAAKzB,MAAMwC,OAClBR,SAAUP,KAAKO,SACf9B,MAAO,CACLkF,OAAQ,gBACRC,aAAc,SAGlB,kBAAC9D,EAAA,EAAD,CACE2D,KAAK,SACLxD,QAAQ,kBACRF,QAASC,KAAKY,UAHhB,YASHZ,KAAK6D,sB,GAlMKlF,a,QCuGNmF,E,kDAvGb,WAAYxF,GAAQ,IAAD,8BACjB,cAAMA,IAQR8B,mBAAqB,SAACtB,GACpB,EAAKuB,SAAS,CAAEC,SAAS,KARzB,EAAK/B,MAAQ,CACXwF,SAAU,GACVzD,SAAS,EACTE,SAAU,IALK,E,uMAeXa,EAAMC,IAAMC,WAAN,O,SAEJC,IAEHC,IAAIJ,GACJK,MAAK,SAACC,GACL,IACIC,EADAoC,EAAU,GAKd,IAFApC,EAAUD,EAAIE,KAAKC,SAEJF,EAAQG,OAAQ,CAAC,IAAD,gBACZH,GADY,yBACpBqC,EADoB,QAEvBD,GAAWA,EAAQjC,OAAS,GAAKkC,GAAQA,EAAKnB,SACxCkB,EAAQE,MAAK,SAACC,GAAD,OAAOA,EAAErB,UAAYmB,EAAI,YAK9CD,EAAQ9E,KAAK+E,IAPjB,2BAA2B,IADE,+BAa/B,EAAK5D,SAAS,CACZC,SAAS,EACTyD,SAAUC,OAGb9B,OAAM,SAACC,GACN,EAAK9B,SAAS,CACZC,SAAS,EACTE,SAAU2B,EAAIN,U,sDAIpB7B,KAAKK,SAAS,CACZC,SAAS,EACTE,SAAU,KAAIqB,O,6IAMlB,OACE,6BACE,6BACE,yBAAKrD,UAAU,yBACb,2BAAOA,UAAU,qBACf,2BAAOA,UAAU,SACf,4BACE,yCAGJ,+BACGwB,KAAKzB,MAAMwF,SAASK,KAAI,SAACvC,GACxB,OACE,wBAAIc,IAAKC,KAAKC,UACZ,4BACE,uBAAGvD,KAAI,iBAAYuC,EAAKiB,UAAYjB,EAAKiB,kBASzD,kBAACC,EAAA,EAAD,CACEC,KAAMhD,KAAKzB,MAAM+B,QACjB2C,OAAQjD,KAAKI,mBACb8C,UAAQ,GAER,kBAACH,EAAA,EAAMnE,OAAP,CAAcuE,aAAW,GACvB,kBAACJ,EAAA,EAAMK,MAAP,iBAEF,kBAACL,EAAA,EAAMM,KAAP,gDACA,kBAACN,EAAA,EAAMO,OAAP,KACE,kBAACxD,EAAA,EAAD,CAAQG,QAAQ,YAAYF,QAASC,KAAKI,oBAA1C,gB,GA9FSzB,aCgLN0F,E,kDA/Kb,WAAY/F,GAAQ,IAAD,uBACjB,cAAMA,IAsBRgG,aAAe,SAACxF,GAAO,IAAD,EACpB,EAAKuB,UAAL,GACEG,SAAU,IADZ,cAEG1B,EAAE2B,OAAOC,KAAO5B,EAAE2B,OAAOE,OAF5B,qCAGuB,GAHvB,KAxBiB,EAiFnB4D,cAAgB,SAACzF,GACfA,EAAE+B,iBAEF,EAAKR,SAAS,CACZmE,qBAAqB,EACrBhE,SAAU,KAGZ,IACIiE,EADO,wJACSC,KAAKC,OAAO,EAAKpG,MAAMqG,OAAOC,eAElD,GACE,EAAKtG,OACL,EAAKA,MAAMqG,OACX,EAAKrG,MAAMuG,UACX,EAAKvG,QAAU,IACM,KAArB,EAAKA,MAAMqG,OACa,KAAxB,EAAKrG,MAAMuG,SACX,CAEA,IAAKL,EAKH,YAJA,EAAKpE,SAAS,CACZmE,qBAAqB,EACrBhE,SAAUU,IAAO,KAKrB,EAAKD,eAEL,EAAKZ,SAAS,CACZmE,qBAAqB,EACrBhE,SAAUU,IAAO,MAjHJ,IAET4B,EAAY,EAAKxE,MAAMyG,MAAMC,OAA7BlC,QAFS,OAGjB,EAAKvE,MAAQ,CACXqG,MAAO,GACPE,SAAU,GACVtE,SAAU,GACVsC,QAASA,GAGP/D,aAAakG,QAAUlG,aAAac,eACtC,EAAKvB,MAAMW,QAAQC,KAAK,CACtBgG,SAAS,YACT3G,MAAO,CACL0G,OAAQlG,aAAakG,OACrBnC,QAAS,EAAKvE,MAAMuE,WAfT,E,4OAiCXqC,EAAM,CACRL,SAAU9E,KAAKzB,MAAMuG,SACrBM,SAAUpF,KAAKzB,MAAMqG,OAGnBvD,EAAMC,IAAMiB,WAAN,Q,SAEJf,IACHgB,KAAKnB,EAAK8D,GACVzD,MAAK,SAACC,GACc,MAAfA,EAAI0D,SACNtG,aAAauG,QAAQ,SAAU,EAAK/G,MAAMqG,OAC1C7F,aAAauG,QAAQ,gBAAiB3D,EAAIE,MAC1C,EAAKvD,MAAMW,QAAQC,KAAK,CACtBgG,SAAS,YACT3G,MAAO,CACL0G,OAAQ,EAAK1G,MAAMqG,MACnB9B,QAAS,EAAKvE,MAAMuE,WAIxB,EAAKzC,SAAS,CACZuE,MAAO,GACPE,SAAU,GACVtE,SAAU,SAIf0B,OAAM,SAACC,GACNM,QAAQC,IAAIP,GACZM,QAAQC,IAAIP,EAAIC,UACZD,GAAOA,EAAIC,UAAYD,EAAIC,SAASP,KACtC,EAAKxB,SAAS,CACZG,SAAU2B,EAAIC,SAASP,OAGzB,EAAKxB,SAAS,CACZG,SAAUU,IAAO,Q,uDAKzBlB,KAAKK,SAAS,CACZG,SAAS,EAAD,K,8IA2CZ,OACE,6BACE,yBAAKhC,UAAU,uBACb,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,2DACb,wBAAIA,UAAU,6BAAd,SAEA,0BAAMA,UAAU,4BACd,uBAAGA,UAAU,YAAYC,MAAO,CAAE8E,MAAO,QACtCvD,KAAKzB,MAAMiC,SAAWR,KAAKzB,MAAMiC,SAAW,MAE/C,yBAAKhC,UAAU,cACb,2BAAO+G,QAAQ,SAAf,mBACA,2BACE9B,KAAK,QACLjF,UAAU,eACVkB,GAAG,QACHgB,KAAK,QACLgD,YAAY,sBACZ8B,UAAQ,EACRjF,SAAUP,KAAKsE,aACf3D,MAAOX,KAAKzB,MAAMqG,SAItB,yBAAKpG,UAAU,cACb,2BAAO+G,QAAQ,YAAf,YACA,2BACE9B,KAAK,WACLjF,UAAU,eACVkB,GAAG,WACHgB,KAAK,WACLgD,YAAY,WACZnD,SAAUP,KAAKsE,aACf3D,MAAOX,KAAKzB,MAAMuG,SAClBU,UAAQ,KAGZ,yBAAKhH,UAAU,0BACb,4BACEuB,QAASC,KAAKuE,cACdd,KAAK,SACLjF,UAAU,2BAHZ,mB,GA/JEG,a,0BCEd8G,E,kDACJ,WAAYnH,GAAQ,IAAD,uBACjB,cAAMA,IA4ORoH,iBAAmB,SAAC5G,GAClB,EAAKuB,SAAS,CACZsF,WAAW,IAEiB,MAA1B,EAAKpH,MAAMqH,WACb,EAAKtH,MAAMW,QAAQC,KAAK,WACW,MAA1B,EAAKX,MAAMqH,YACpB,EAAKvF,SAAS,CACZG,SAAU,EAAKjC,MAAMsH,SACrBA,SAAU,GACVD,WAAY,EACZD,WAAW,KAxPE,EA6PnBG,QAAU,SAAChH,GACTA,EAAE+B,iBAEF,EAAKR,SAAS,CACZG,SAAU,GACVuF,eAAgB,GAChBH,WAAY,EACZD,WAAW,EACXE,SAAU,KAOZ,IAJA,IAGIlD,EAHAqD,EAAe,GACfC,EAAY,EAAK1H,MAAM2H,SAG3B,MAFoBC,OAAOC,KAAKH,GAEhC,eACMA,EADDtD,EAAsB,OAEvBqD,EAAa9G,KAAKyD,GAItB,GAAIqD,GAAgBA,EAAajE,OAAQ,CACvC,EAAK1B,SAAS,CACZ2F,aAAcA,IAFuB,oBAIpBA,GAJoB,yBAI9BK,EAJ8B,QAKjClB,EAAM,EAAK5G,MAAMwF,SAASG,MAC5B,SAACC,GAAD,OAAOA,EAAEkC,SAAWC,SAASD,MAE/B,GAAIlB,GAAmC,IAA5BgB,OAAOC,KAAKjB,GAAKpD,QACtBoD,EAAIoB,OAASpB,EAAIqB,OAInB,OAHA,EAAKnG,SAAS,CACZG,SAAU2E,EAAIsB,SAAWvF,IAAO,KAE5B,CAAN,WATN,2BAAiC,CAAC,IAAD,yCAJM,8BAiBvC,EAAKwF,wBAEL,EAAKrG,SAAS,CACZG,SAAUU,IAAO,MAtSJ,EA2SnBd,mBAAqB,SAACtB,GACpB,EAAKuB,SAAS,CAAEC,SAAS,KAzSzB,IAAIwC,EAAU,EAAKxE,MAAMqI,SAAS7D,QAC9BmC,EAAS,EAAK3G,MAAMqI,SAAS1B,OAJhB,OAMjB,EAAK1G,MAAQ,CACXwF,SAAU,GACVjB,QAASA,EACToD,SAAU,GACVF,aAAc,GACdxF,SAAU,GACVyE,OAAQA,EACR3E,SAAS,EACTqF,WAAW,EACXE,SAAU,GACVD,WAAY,EACZgB,WAAY,GACZb,eAAgB,IAlBD,E,mGAsBCc,G,uFACd/D,EAAU9C,KAAKzB,MAAMuE,QAErBgE,EAAWxF,IAAMC,WAAN,0BAAsCuB,G,SAE/CtB,IACHC,IAAIqF,GACJpF,MAAK,SAACC,GACL,IADa,EACToF,EAAOpF,EAAIE,KAAKC,OAChBqD,EAAM,GACN6B,EAAa,GAEbjD,EAAW,GALF,cAMDgD,GANC,IAMb,2BAAkB,CAAb5B,EAAa,QAChB,IAAI8B,EAAa,GACjBD,EAAW9H,KAAKiG,EAAIkB,QACpBY,EAAWnE,QAAUqC,EAAIrC,QACzBmE,EAAWT,OAASrB,EAAI+B,IACxBD,EAAWZ,OAASlB,EAAIkB,OACxBtC,EAAS7E,KAAK+H,IAZH,8BAkBb,OAJA,EAAK5G,SAAS,CACZuG,WAAYI,EACZjD,SAAUA,IAEL8C,EAAO,MAEf3E,OAAM,SAACC,GACNM,QAAQC,IAAIP,GACZM,QAAQC,IAAIP,EAAIC,UAEhB,EAAK/B,SAAS,CACZC,SAAS,EACTE,SAAUU,IAAO,Q,kRAMnB8F,EAAahH,KAAKzB,MAAMqI,WACxBO,EAAc,GACdpD,EAAW/D,KAAKzB,MAAMwF,UAEtBiD,IAAcA,EAAWjF,O,+BACRiF,G,kHAAVX,E,QACHe,EAAW9F,IAAM+F,WAAN,gBAA4BhB,G,SACrC7E,IACHC,IAAI2F,GACJ1F,MAAK,SAACU,GACL,IAAIT,EAAMS,EAASP,KAEnB,GAAmC,IAA/BsE,OAAOC,KAAKzE,EAAI,IAAII,OAAc,CACpC,IAAIkF,EAAalD,EAASG,MACxB,SAACC,GAAD,OAAOA,EAAEkC,SAAWC,SAASD,MAE3BiB,EAAU3F,EAAI,GAClBsF,EAAWR,SAAWa,EAAQb,SAC9BQ,EAAWV,OAASe,EAAQC,IAC5BJ,EAAYjI,KAAK+H,GAEnB,EAAK5G,SAAS,CACZ0D,SAAUoD,EACV7G,SAAS,OAGZ4B,OAAM,SAACC,GACNM,QAAQC,IAAIP,GACZM,QAAQC,IAAIP,EAAIC,UAChB,EAAK/B,SAAS,CACZG,SAAUU,IAAO,GACjBZ,SAAS,EACTqF,WAAW,EACXE,SAAU3E,IAAO,Q,0hBAQ3BlB,KAAKwH,eAAc,SAACX,GACH,IAAXA,EACF,EAAKY,iBAEL,EAAKC,SAAS,Q,2IAKLrB,GACb,IAAMsB,EAAcxB,OAAOyB,OAAO,GAAI5H,KAAKzB,MAAM2H,UACjDyB,EAAYtB,IAAWrG,KAAKzB,MAAM2H,SAASG,GAC3CrG,KAAKK,SAAS,CACZ6F,SAAUyB,EACVnH,SAAU,O,mFAIYqH,G,mFACpB9B,EAAiB,GAEjB+B,EAAa,GACbC,EAAU/H,KAAKzB,MAAMwF,SACrBmC,EAAWlG,KAAKzB,MAAM2H,S,cAEP6B,G,IAAnB,2BAAKD,EAAuB,QACtB5B,EAAS4B,EAAWzB,UAClBlB,EAAM,CACRrC,QAASgF,EAAWhF,QACpBuD,OAAQyB,EAAWzB,OACnBa,IAAKY,EAAWtB,OAChBvB,OAAQjF,KAAKzB,MAAM0G,OACnBnD,OAAQ,WAGViE,EAAe7G,KAAKiG,I,8CAIlBnF,KAAKK,SAAS,CAClB0F,eAAgBA,I,OAGlB8B,EAAO,K,4LAGmB9B,EAAgBiC,G,8EACtCC,EAAW3G,IAAMiB,WAAN,sB,SAETf,IACHgB,KAAKyF,EAAUlC,GACfrE,MAAK,SAACC,GAGL,GAFAc,QAAQC,IAAI,MAAOf,GAGF,MAAfA,EAAI0D,QACJ1D,EAAIE,KAAKqG,SAAS,YACjBvG,EAAIE,KAAKqG,SAAS,YAEnB,OAAOF,EAAK,KAEZA,EAAK,QAGR9F,OAAM,SAACC,GACFA,EAAIC,UAAYD,EAAIC,SAASP,KAC/BmG,EAAK7F,EAAIC,SAASP,MAElBmG,EAAK,M,mIAKJG,GACPA,EAAQA,GAASjH,IAAOiH,GAASjH,IAAOiH,GAASA,EACjDnI,KAAKK,SAAS,CACZC,SAAS,EACTqF,WAAW,EACXE,SAAU,+CAAiDsC,EAC3DvC,WAAY,Q,8EAIKG,EAAgBqC,G,8EAC/BH,EAAW3G,IAAMiB,WAAN,W,SAETf,IACHgB,KAAKyF,EAAUlC,GACfrE,MAAK,SAACC,GACDA,EAAIE,KACNuG,EAA6B,IAApBzG,EAAIE,KAAKE,QAElBqG,GAAS,MAGZlG,OAAM,SAACC,GACNiG,GAAS,M,kQAKb,IACEpI,KAAKK,SAAS,CAAEC,SAAS,IAEzBN,KAAKqI,qBAAoB,SAACC,GACxB,IAAIvC,EAAiB,EAAKxH,MAAMwH,eACpB,MAARuC,GAAevC,GAAkBA,EAAehE,OAClD,EAAKwG,eAAexC,GAAgB,SAACqC,GAC/BA,EACF,EAAKI,sBAAsBzC,GAAgB,SAAC0C,GAC7B,MAATA,EACF,EAAKpI,SAAS,CACZC,SAAS,EACTqF,WAAW,EACXE,SACE,wEACFD,WAAY,MAGd,EAAK8B,SAASe,MAIlB,EAAKf,SAAS,QAIlB,EAAKA,SAAS,QAGlB,MAAO5I,GACPkB,KAAK0H,SAAS,K,qIAsER,IAAD,OACP,OACE,6BACE,6BACE,yBAAKlJ,UAAU,yBACb,8BACE,uBAAGA,UAAU,YAAYC,MAAO,CAAE8E,MAAO,QACtCvD,KAAKzB,MAAMiC,SAAWR,KAAKzB,MAAMiC,SAAW,MAE9CR,KAAKzB,MAAMwF,SAAShC,OAAS,EAC5B,6BACE,2BAAOvD,UAAU,qBACf,2BAAOA,UAAU,SACf,4BACE,6BACA,wCACA,uCACA,yCACA,iDACA,oDAGJ,+BACGwB,KAAKzB,MAAMwF,SAASK,KAAI,SAACvC,GACxB,OACE,wBAAIc,IAAKC,KAAKC,UACZ,4BACE,2BACEnC,KAAK,WACL+C,KAAK,WACLlD,SAAU,kBACR,EAAKmI,eAAe7G,EAAKwE,SAE3BsC,SACuC,IAArC,EAAKpK,MAAM2H,SAASrE,EAAKwE,WAI/B,4BAAKxE,EAAKiB,SACV,4BAAKjB,EAAKwE,QACV,4BAAKxE,EAAK4E,UACV,4BAAK5E,EAAK2E,QACV,4BAAK3E,EAAK0E,cAMpB,yBAAK/H,UAAU,0BACb,4BACEuB,QAASC,KAAK8F,QACdrC,KAAK,SACLjF,UAAU,2BAHZ,WAUJ,qGAQR,kBAACuE,EAAA,EAAD,CACEC,KAAMhD,KAAKzB,MAAM+B,QACjB2C,OAAQjD,KAAKI,mBACb8C,UAAQ,GAER,kBAACH,EAAA,EAAMnE,OAAP,CAAcuE,aAAW,GACvB,kBAACJ,EAAA,EAAMK,MAAP,iBAEF,kBAACL,EAAA,EAAMM,KAAP,gDACA,kBAACN,EAAA,EAAMO,OAAP,KACE,kBAACxD,EAAA,EAAD,CAAQG,QAAQ,YAAYF,QAASC,KAAKI,oBAA1C,WAKJ,kBAAC2C,EAAA,EAAD,CACEC,KAAMhD,KAAKzB,MAAMoH,UACjB1C,OAAQjD,KAAK0F,iBACbxC,UAAQ,GAER,kBAACH,EAAA,EAAMnE,OAAP,CAAcuE,aAAW,GACvB,kBAACJ,EAAA,EAAMK,MAAP,sBAEF,kBAACL,EAAA,EAAMM,KAAP,KAAarD,KAAKzB,MAAMsH,UACxB,kBAAC9C,EAAA,EAAMO,OAAP,KACE,kBAACxD,EAAA,EAAD,CAAQG,QAAQ,YAAYF,QAASC,KAAK0F,kBAA1C,gB,GA5YY/G,aAsZTuB,cAAWuF,GC5VXmD,E,kDA3Db,WAAYtK,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXsK,cAAe,IAHA,E,8LAQbxH,EAAMC,IAAMiB,WAAN,gB,SAEJf,IACHC,IAAIJ,GACJK,MAAK,SAACC,GACL,EAAKtB,SAAS,CACZwI,cAAelH,EAAIE,UAGtBK,OAAM,SAACC,GACN,EAAK9B,SAAS,CACZG,SAAUU,IAAO,Q,gIAMvB,OACE,6BACE,6BACE,uBAAG1C,UAAU,YAAYC,MAAO,CAAE8E,MAAO,QACtCvD,KAAKzB,MAAMiC,SAAWR,KAAKzB,MAAMiC,SAAW,MAE/C,yBAAKhC,UAAU,yBACb,2BAAOA,UAAU,qBACf,2BAAOA,UAAU,SACf,4BACE,uCACA,oCACA,sCAGJ,+BACGwB,KAAKzB,MAAMsK,cAAczE,KAAI,SAACvC,GAC7B,OACE,wBAAIc,IAAKC,KAAKC,UACZ,4BAAKhB,EAAKiB,SACV,4BAAKjB,EAAKiH,MACV,4BAAKjH,EAAKkH,mB,GA/CJpK,aC8FbqK,E,kDA7Fb,WAAY1K,GAAQ,IAAD,sBACjB,cAAMA,GAEN,IAAI2G,EAASlG,aAAakG,OAE1B,OAAKA,GAIL,EAAK1G,MAAQ,CACX0K,eAAgB,GAChBhE,OAAQA,GAXO,GAMR,gBAAK3G,MAAMW,QAAQC,KAAK,c,8LAU7BmC,EAAMC,IAAMiB,WAAN,gCAA4CvC,KAAKzB,MAAM0G,Q,SAE3DzD,IACHC,IAAIJ,GACJK,MAAK,SAACC,GACL,EAAKtB,SAAS,CACZ4I,eAAgBtH,EAAIE,UAGvBK,OAAM,SAACC,GACFA,GAAOA,EAAIC,UAAYD,EAAIC,SAASP,KACtC,EAAKxB,SAAS,CACZG,SAAU2B,EAAIC,SAASP,OAGzB,EAAKxB,SAAS,CACZG,SAAUU,IAAO,Q,qIAOzB,IAAIgI,EAAOlJ,KAAKzB,MAAM0K,eAEtB,GAAIC,GAAQA,EAAKnH,OAAQ,CACvB,IAAIoH,EACAC,EAAMF,EAAKnH,OACf,IAAKoH,EAAI,EAAGA,EAAIC,EAAKD,IAAK,CACxB,IAAIhE,EAAM+D,EAAKC,GACXE,EAAUlE,EAAI2D,KACdA,EAAO,IAAIQ,KAAKD,GACpBP,EAAKS,QAAQT,EAAKU,UAAY,GAC9B,IAAIC,EAAOX,EAAKY,eAChBvE,EAAI2D,KAAOW,GAIf,OACE,6BACE,6BACE,uBAAGjL,UAAU,YAAYC,MAAO,CAAE8E,MAAO,QACtCvD,KAAKzB,MAAMiC,SAAWR,KAAKzB,MAAMiC,SAAW,MAE/C,yBAAKhC,UAAU,yBACb,2BAAOA,UAAU,qBACf,2BAAOA,UAAU,SACf,4BACE,wCACA,uCACA,wCACA,4CACA,8CAGJ,+BACG0K,GACCA,EAAK9E,KAAI,SAACvC,GACR,OACE,wBAAIc,IAAKC,KAAKC,UACZ,4BAAKhB,EAAKiB,SACV,4BAAKjB,EAAKwE,QACV,4BAAKxE,EAAKqF,KACV,4BAAKrF,EAAKiH,MACV,4BAAKjH,EAAKkH,mB,GAjFLpK,aCcdgL,E,kDAhBb,WAAYrL,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,qDAMjB,OACE,6BACE,yBAAKC,UAAU,YAAf,kD,GATeG,aC0DRiL,E,kDApDb,WAAYtL,GAAQ,IAAD,EAGjB,GAHiB,sBACjB,cAAMA,IAEIA,MAAMuL,SAAStL,MAEvB,OADA,EAAKD,MAAMW,QAAQC,KAAK,aACxB,eAGF,IAAI4D,EAAU,EAAKxE,MAAMuL,SAAStL,MAAMuE,QACpCmC,EAAS,EAAK3G,MAAMuL,SAAStL,MAAM0G,OATtB,OAWjB,EAAK1G,MAAQ,CACXuE,QAASA,EACTmC,OAAQA,GAbO,E,kGAoBjB,GAAIjF,KAAKzB,MAAO,CACd,IAAMoI,EAAW,CACf7D,QAAS9C,KAAKzB,MAAMuE,QACpBmC,OAAQjF,KAAKzB,MAAM0G,QAGrB,OACE,6BACE,kBAAC6E,EAAA,EAAD,CAAMC,iBAAiB,YAAYrK,GAAG,4BACpC,kBAACsK,EAAA,EAAD,CAAKC,SAAS,YAAYC,MAAM,cAC9B,kBAAC,EAAD,CAAWvD,SAAUA,KAEvB,kBAACqD,EAAA,EAAD,CAAKC,SAAS,gBAAgBC,MAAM,kBAClC,kBAAC,EAAD,OAEF,kBAACF,EAAA,EAAD,CAAKC,SAAS,iBAAiBC,MAAM,mBACnC,kBAAC,EAAD,SAOR,OADAlK,KAAK1B,MAAMW,QAAQC,KAAK,eAEtB,6BACE,kBAAC,EAAD,W,GA9CaP,aC0CRwL,E,uKArCX,OACE,yBAAK3L,UAAU,OACb,gCACE,kBAAC,EAAD,OAEF,yBAAKA,UAAU,iBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO4L,OAAK,EAACC,KAAK,IAAIC,UAAWjM,IACjC,kBAAC,IAAD,CACE+L,OAAK,EACLC,KAAK,UACLE,OAAQ,SAACjM,GAAD,OAAW,kBAAC,EAAWA,MAEjC,kBAAC,IAAD,CACE+L,KAAK,UACLE,OAAQ,SAACjM,GAAD,OAAW,kBAAC,EAAWA,MAEjC,kBAAC,IAAD,CACE+L,KAAK,kBACLE,OAAQ,SAACjM,GAAD,OAAW,kBAAC,EAAUA,MAEhC,kBAAC,IAAD,CACE+L,KAAK,YACLE,OAAQ,SAACjM,GAAD,OAAW,kBAAC,EAAaA,MAEnC,kBAAC,IAAD,CACE+L,KAAK,aACLE,OAAQ,SAACjM,GAAD,OAAW,kBAAC,EAAaA,MAEnC,kBAAC,IAAD,CAAUkM,GAAG,sB,GA/BP7L,aCEE8L,QACa,cAA7BC,OAAOb,SAASc,UAEe,UAA7BD,OAAOb,SAASc,UAEhBD,OAAOb,SAASc,SAAS5F,MACvB,2D,YCXF9F,EAAU2L,cAEhBC,IAASN,OACP,kBAAC,IAAD,CAAetL,QAASA,GACtB,kBAAC,EAAD,OAEF6L,SAASC,eAAe,SDsHlB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBxJ,MAAK,SAAAyJ,GACJA,EAAaC,gBAEdlJ,OAAM,SAAAG,GACLI,QAAQJ,MAAMA,EAAMJ,a,iBEzI9BoJ,EAAOC,QAAU,CACf,EAAK,+BACL,EAAK,8BACL,EAAK,iDACL,EACE,6FACF,EACE,iGACF,EACE,sFACF,EAAK,2DACL,EACE,+EACF,EAAK,oCACL,GACE,+E,iBCfJD,EAAOC,QAAU,CAEf/I,WACE,4EAEFhB,WAAY,wDAEZ8F,WACE,kF","file":"static/js/main.97d69560.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"homebox\">\r\n          <div className=\"home\">\r\n            <h5 className=\"text-danger pt-3 ml-3\">Welcome to Our Company Z</h5>\r\n            <h6 className=\"text-dark pt-3 ml-3\">About Us</h6>\r\n            <div className=\"border rounded ml-3\" style={{ width: \"50%\" }}>\r\n              <p className=\"text-dark pt-3 ml-5 mr-3 \">\r\n                A web-application that offers the client users to select a\r\n                particular job (either by selecting a job name from a list of\r\n                job-names (obtained from the company X) in <b>Get All Jobs</b>{\" \"}\r\n                page or by doing a search for a job with a particular name\r\n                supplied by the user in <b>Search</b> page.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport { Navbar, Nav, Button } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  handleLogout = (e) => {\r\n    localStorage.removeItem(\"userId\");\r\n    localStorage.removeItem(\"session_token\");\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"header\">\r\n          <Navbar className=\"navHeader bg-primary mt-3\" expand=\"lg\">\r\n            <Navbar.Brand className=\"text-light font-weight-bold\" href=\"/\">\r\n              Home\r\n            </Navbar.Brand>\r\n            <Navbar.Toggle\r\n              aria-controls=\"basic-navbar-nav\"\r\n              className=\"text-light font-weight-bold\"\r\n            >\r\n              Menu\r\n            </Navbar.Toggle>\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n              <Nav>\r\n                <Nav.Link\r\n                  className=\"text-light font-weight-bold\"\r\n                  href=\"/search\"\r\n                >\r\n                  Search\r\n                </Nav.Link>\r\n                <Nav.Link\r\n                  className=\"text-light font-weight-bold\"\r\n                  href=\"/getAll\"\r\n                >\r\n                  Get All Jobs\r\n                </Nav.Link>\r\n              </Nav>\r\n              {localStorage.session_token ? (\r\n                <Button\r\n                  className=\"text-light ml-auto mr-2\"\r\n                  onClick={this.handleLogout}\r\n                  variant=\"\"\r\n                >\r\n                  <i className=\"fas fa-sign-out-alt\" />\r\n                </Button>\r\n              ) : null}\r\n            </Navbar.Collapse>\r\n          </Navbar>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport errMsg from \"./errormessages\";\r\nimport CONST from \"./constants\";\r\n\r\nclass Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jobpart: [],\r\n      search: \"\",\r\n      tableFlag: false,\r\n      errorMsg: \"\",\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  handleLoadingClose = (e) => {\r\n    this.setState({ loading: false });\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      errorMsg: \"\",\r\n      [e.target.name]: e.target.value,\r\n      validationErrorFlag: false,\r\n    });\r\n  };\r\n\r\n  async apiCall(searchText) {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n\r\n    let url = CONST.COMP_X_URL + `jobList?jobName=${searchText}`;\r\n\r\n    await axios\r\n      .get(url)\r\n      .then((res) => {\r\n        let resList = {};\r\n        if (res.data.result) {\r\n          resList = res.data.result;\r\n\r\n          if (resList && resList.length) {\r\n            this.setState({\r\n              jobpart: resList[0],\r\n              tableFlag: true,\r\n              errorMsg: \"\",\r\n              loading: false,\r\n            });\r\n          } else {\r\n            this.setState({\r\n              errorMsg: errMsg[\"10\"],\r\n              loading: false,\r\n              jobpart: [],\r\n            });\r\n          }\r\n        } else if (res.data.statusCode === 204) {\r\n          this.setState({\r\n            errorMsg: res.data.message,\r\n            loading: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            errorMsg: errMsg[\"4\"],\r\n            loading: false,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        if (err.response) {\r\n          this.setState({\r\n            tableFlag: false,\r\n            errorMsg: err.response.data.error,\r\n            loading: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            tableFlag: false,\r\n            errorMsg: errMsg[\"4\"],\r\n            loading: false,\r\n          });\r\n        }\r\n      });\r\n\r\n    let url2 = CONST.COMP_Z_URL + `jobs/${this.state.search}`;\r\n\r\n    await axios\r\n      .post(url2)\r\n      .then((res) => console.log(res))\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  onSearch = (e) => {\r\n    e.preventDefault();\r\n    let searchText = this.state.search;\r\n    searchText = searchText.trim();\r\n\r\n    if (searchText) {\r\n      this.apiCall(searchText);\r\n    } else {\r\n      this.setState({\r\n        errorMsg: errMsg[\"7\"],\r\n        tableFlag: false,\r\n        loading: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  searchResults() {\r\n    const jobpart = this.state.jobpart;\r\n\r\n    return (\r\n      <div>\r\n        {this.state.tableFlag ? (\r\n          <div>\r\n            <div className=\"col-12 col-sm-12 pt-4\">\r\n              <table className=\"table table-hover\">\r\n                <thead className=\"thead\">\r\n                  <tr>\r\n                    <th>JobName</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state.jobpart ? (\r\n                    <tr key={Math.random()}>\r\n                      <th>\r\n                        <a href={`/login/${jobpart.jobName}`}>\r\n                          {jobpart.jobName}\r\n                        </a>\r\n                      </th>\r\n                    </tr>\r\n                  ) : (\r\n                    <tr key={Math.random()}>\r\n                      <th>No Job matches the search.</th>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        <Modal\r\n          show={this.state.loading}\r\n          onHide={this.handleLoadingClose}\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Loading</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>The details are loading please wait....</Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={this.handleLoadingClose}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"search pt-3 ml-3\">\r\n          <p className=\"error-msg\" style={{ color: \"red\" }}>\r\n            {this.state.errorMsg ? this.state.errorMsg : null}\r\n          </p>\r\n          <h4\r\n            className=\"search pt-3 ml-3 text-dark font-weight-bold\"\r\n            style={{ fontFamily: \"Sans\" }}\r\n          >\r\n            Search page\r\n          </h4>\r\n          <div className=\"border rounded pt-1 ml-3\" style={{ width: \"20%\" }}>\r\n            <form>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search\"\r\n                className=\"mr-sm-2\"\r\n                name=\"search\"\r\n                value={this.state.search}\r\n                onChange={this.onChange}\r\n                style={{\r\n                  border: \"2px solid red\",\r\n                  borderRadius: \"4px\",\r\n                }}\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"outline-success\"\r\n                onClick={this.onSearch}\r\n              >\r\n                Search\r\n              </Button>\r\n            </form>\r\n          </div>\r\n          {this.searchResults()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport CONST from \"./constants\";\r\n\r\nclass GetAll extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jobparts: [],\r\n      loading: true,\r\n      errorMsg: \"\",\r\n    };\r\n  }\r\n\r\n  handleLoadingClose = (e) => {\r\n    this.setState({ loading: false });\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      let url = CONST.COMP_X_URL + `jobs`;\r\n\r\n      await axios\r\n        //.get(`https://qvysii6xyi.execute-api.us-east-1.amazonaws.com/companyX`)\r\n        .get(url)\r\n        .then((res) => {\r\n          let objList = [];\r\n          let resList = {};\r\n          let exist = {};\r\n          resList = res.data.result;\r\n\r\n          if (resList && resList.length) {\r\n            for (let uniq of resList) {\r\n              if (objList && objList.length > 0 && uniq && uniq.jobName) {\r\n                exist = objList.find((c) => c.jobName === uniq[\"jobName\"]);\r\n                if (!exist) {\r\n                  objList.push(uniq);\r\n                }\r\n              } else {\r\n                objList.push(uniq);\r\n              }\r\n            }\r\n          }\r\n\r\n          this.setState({\r\n            loading: false,\r\n            jobparts: objList,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          this.setState({\r\n            loading: false,\r\n            errorMsg: err.data,\r\n          });\r\n        });\r\n    } catch (err) {\r\n      this.setState({\r\n        loading: false,\r\n        errorMsg: err.data,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <div className=\"col-12 col-sm-12 pt-4\">\r\n            <table className=\"table table-hover\">\r\n              <thead className=\"thead\">\r\n                <tr>\r\n                  <th>Jobname</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.state.jobparts.map((data) => {\r\n                  return (\r\n                    <tr key={Math.random()}>\r\n                      <th>\r\n                        <a href={`/login/${data.jobName}`}>{data.jobName}</a>\r\n                      </th>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <Modal\r\n          show={this.state.loading}\r\n          onHide={this.handleLoadingClose}\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Loading</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>The details are loading please wait....</Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={this.handleLoadingClose}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GetAll;\r\n","import React, { Component } from \"react\";\r\nimport errMsg from \"./errormessages\";\r\nimport axios from \"axios\";\r\nimport CONST from \"./constants\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { jobName } = this.props.match.params;\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      errorMsg: \"\",\r\n      jobName: jobName,\r\n    };\r\n\r\n    if (localStorage.userId && localStorage.session_token) {\r\n      this.props.history.push({\r\n        pathname: `/homepage`,\r\n        state: {\r\n          userId: localStorage.userId,\r\n          jobName: this.state.jobName,\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      errorMsg: \"\",\r\n      [e.target.name]: e.target.value,\r\n      validationErrorFlag: false,\r\n    });\r\n  };\r\n\r\n  async apiCall() {\r\n    try {\r\n      let obj = {\r\n        password: this.state.password,\r\n        username: this.state.email,\r\n      };\r\n\r\n      let url = CONST.COMP_Z_URL + `users`;\r\n\r\n      await axios\r\n        .post(url, obj)\r\n        .then((res) => {\r\n          if (res.status === 200) {\r\n            localStorage.setItem(\"userId\", this.state.email);\r\n            localStorage.setItem(\"session_token\", res.data);\r\n            this.props.history.push({\r\n              pathname: `/homepage`,\r\n              state: {\r\n                userId: this.state.email,\r\n                jobName: this.state.jobName,\r\n              },\r\n            });\r\n\r\n            this.setState({\r\n              email: \"\",\r\n              password: \"\",\r\n              errorMsg: \"\",\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          console.log(err.response);\r\n          if (err && err.response && err.response.data) {\r\n            this.setState({\r\n              errorMsg: err.response.data,\r\n            });\r\n          } else {\r\n            this.setState({\r\n              errorMsg: errMsg[\"4\"],\r\n            });\r\n          }\r\n        });\r\n    } catch (err) {\r\n      this.setState({\r\n        errorMsg: err,\r\n      });\r\n    }\r\n  }\r\n\r\n  onLoginSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      validationErrorFlag: false,\r\n      errorMsg: \"\",\r\n    });\r\n\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    let validEmail = re.test(String(this.state.email).toLowerCase());\r\n\r\n    if (\r\n      this.state &&\r\n      this.state.email &&\r\n      this.state.password &&\r\n      this.state !== {} &&\r\n      this.state.email !== \"\" &&\r\n      this.state.password !== \"\"\r\n    ) {\r\n      //email address validation\r\n      if (!validEmail) {\r\n        this.setState({\r\n          validationErrorFlag: true,\r\n          errorMsg: errMsg[\"2\"],\r\n        });\r\n        return;\r\n      }\r\n\r\n      this.apiCall();\r\n    } else {\r\n      this.setState({\r\n        validationErrorFlag: true,\r\n        errorMsg: errMsg[\"1\"],\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"container pt-4 pb-4\">\r\n          <div className=\"row justify-content-center pt-4\">\r\n            <div className=\"col-12 col-sm-6 col-md-4 pt-4 signup-div border rounded\">\r\n              <h3 className=\"registerTitle text-center\">Login</h3>\r\n\r\n              <form className=\"form-container pt-2 pb-5\">\r\n                <p className=\"error-msg\" style={{ color: \"red\" }}>\r\n                  {this.state.errorMsg ? this.state.errorMsg : null}\r\n                </p>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\"> Email Address </label>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Email Address\"\r\n                    required\r\n                    onChange={this.handleChange}\r\n                    value={this.state.email}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Password\"\r\n                    onChange={this.handleChange}\r\n                    value={this.state.password}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"form-group text-center\">\r\n                  <button\r\n                    onClick={this.onLoginSubmit}\r\n                    type=\"submit\"\r\n                    className=\"btn btn-info btn-centre\"\r\n                  >\r\n                    Login\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport errMsg from \"./errormessages\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport CONST from \"./constants\";\r\n\r\nclass OrderPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let jobName = this.props.orderObj.jobName;\r\n    let userId = this.props.orderObj.userId;\r\n\r\n    this.state = {\r\n      jobparts: [],\r\n      jobName: jobName,\r\n      selected: {},\r\n      selectedList: [],\r\n      errorMsg: \"\",\r\n      userId: userId,\r\n      loading: true,\r\n      modalFlag: false,\r\n      modalMsg: \"\",\r\n      modalRoute: 0,\r\n      partsFromX: [],\r\n      requestDetails: [],\r\n    };\r\n  }\r\n\r\n  async getJobDetails(jobRes) {\r\n    let jobName = this.state.jobName;\r\n\r\n    let compxURL = CONST.COMP_X_URL + `jobList?jobName=${jobName}`;\r\n\r\n    await axios\r\n      .get(compxURL)\r\n      .then((res) => {\r\n        let jobs = res.data.result;\r\n        let obj = {};\r\n        let partIdList = [];\r\n\r\n        let jobparts = [];\r\n        for (obj of jobs) {\r\n          let jobpartObj = {};\r\n          partIdList.push(obj.partId);\r\n          jobpartObj.jobName = obj.jobName;\r\n          jobpartObj.reqQty = obj.qty;\r\n          jobpartObj.partId = obj.partId;\r\n          jobparts.push(jobpartObj);\r\n        }\r\n        this.setState({\r\n          partsFromX: partIdList,\r\n          jobparts: jobparts,\r\n        });\r\n        return jobRes(1);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        console.log(err.response);\r\n\r\n        this.setState({\r\n          loading: false,\r\n          errorMsg: errMsg[\"5\"],\r\n        });\r\n      });\r\n  }\r\n\r\n  async getPartDetails() {\r\n    let partIdList = this.state.partsFromX;\r\n    let jobpartList = [];\r\n    let jobparts = this.state.jobparts;\r\n\r\n    if (partIdList && partIdList.length) {\r\n      for (let partId of partIdList) {\r\n        let compyURL = CONST.COMP_Y_URL + `parts/${partId}`;\r\n        await axios\r\n          .get(compyURL)\r\n          .then((response) => {\r\n            let res = response.data;\r\n\r\n            if (Object.keys(res[0]).length !== 0) {\r\n              let jobpartObj = jobparts.find(\r\n                (c) => c.partId === parseInt(partId)\r\n              );\r\n              let partObj = res[0];\r\n              jobpartObj.partName = partObj.partName;\r\n              jobpartObj.avlQty = partObj.qoh;\r\n              jobpartList.push(jobpartObj);\r\n            }\r\n            this.setState({\r\n              jobparts: jobpartList,\r\n              loading: false,\r\n            });\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n            console.log(err.response);\r\n            this.setState({\r\n              errorMsg: errMsg[\"4\"],\r\n              loading: false,\r\n              modalFlag: true,\r\n              modalMsg: errMsg[\"4\"],\r\n            });\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.getJobDetails((jobRes) => {\r\n      if (jobRes === 1) {\r\n        this.getPartDetails();\r\n      } else {\r\n        this.errorRes(\"5\");\r\n      }\r\n    });\r\n  }\r\n\r\n  handleCheckbox(partId) {\r\n    const newSelected = Object.assign({}, this.state.selected);\r\n    newSelected[partId] = !this.state.selected[partId];\r\n    this.setState({\r\n      selected: newSelected,\r\n      errorMsg: \"\",\r\n    });\r\n  }\r\n\r\n  async prepareOrderDetails(ordRes) {\r\n    let requestDetails = [];\r\n\r\n    let requestObj = {};\r\n    let jobList = this.state.jobparts;\r\n    let selected = this.state.selected;\r\n\r\n    for (requestObj of jobList) {\r\n      if (selected[requestObj.partId]) {\r\n        let obj = {\r\n          jobName: requestObj.jobName,\r\n          partId: requestObj.partId,\r\n          qty: requestObj.reqQty,\r\n          userId: this.state.userId,\r\n          result: \"Ordered\",\r\n        };\r\n\r\n        requestDetails.push(obj);\r\n      }\r\n    }\r\n\r\n    await this.setState({\r\n      requestDetails: requestDetails,\r\n    });\r\n\r\n    ordRes(200);\r\n  }\r\n\r\n  async updateOrderDetailsinZ(requestDetails, resZ) {\r\n    let compzURL = CONST.COMP_Z_URL + `updateOrderusing2pc`;\r\n\r\n    await axios\r\n      .post(compzURL, requestDetails)\r\n      .then((res) => {\r\n        console.log(\"res\", res);\r\n\r\n        if (\r\n          res.status === 200 &&\r\n          res.data.includes(\"commit\") &&\r\n          !res.data.includes(\"rollback\")\r\n        ) {\r\n          return resZ(200);\r\n        } else {\r\n          resZ(\"6\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        if (err.response && err.response.data) {\r\n          resZ(err.response.data);\r\n        } else {\r\n          resZ(5);\r\n        }\r\n      });\r\n  }\r\n\r\n  errorRes(input) {\r\n    input = input && errMsg[input] ? errMsg[input] : input;\r\n    this.setState({\r\n      loading: false,\r\n      modalFlag: true,\r\n      modalMsg: \"The system faced error while placing order. \" + input,\r\n      modalRoute: \"2\",\r\n    });\r\n  }\r\n\r\n  async checkOrderUser(requestDetails, resCheck) {\r\n    let compzURL = CONST.COMP_Z_URL + `getOrder`;\r\n\r\n    await axios\r\n      .post(compzURL, requestDetails)\r\n      .then((res) => {\r\n        if (res.data) {\r\n          resCheck(res.data.length === 0);\r\n        } else {\r\n          resCheck(false);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        resCheck(false);\r\n      });\r\n  }\r\n\r\n  async orderBackendCall() {\r\n    try {\r\n      this.setState({ loading: true });\r\n\r\n      this.prepareOrderDetails((ord) => {\r\n        let requestDetails = this.state.requestDetails;\r\n        if (ord === 200 && requestDetails && requestDetails.length) {\r\n          this.checkOrderUser(requestDetails, (resCheck) => {\r\n            if (resCheck) {\r\n              this.updateOrderDetailsinZ(requestDetails, (resz) => {\r\n                if (resz === 200) {\r\n                  this.setState({\r\n                    loading: false,\r\n                    modalFlag: true,\r\n                    modalMsg:\r\n                      \"The order has been successfully placed and updated in company X and Y\",\r\n                    modalRoute: \"1\",\r\n                  });\r\n                } else {\r\n                  this.errorRes(resz);\r\n                }\r\n              });\r\n            } else {\r\n              this.errorRes(\"9\");\r\n            }\r\n          });\r\n        } else {\r\n          this.errorRes(\"5\");\r\n        }\r\n      });\r\n    } catch (e) {\r\n      this.errorRes(\"5\");\r\n    }\r\n  }\r\n\r\n  handleModalClose = (e) => {\r\n    this.setState({\r\n      modalFlag: false,\r\n    });\r\n    if (this.state.modalRoute === \"1\") {\r\n      this.props.history.push(\"/search\");\r\n    } else if (this.state.modalRoute === \"2\") {\r\n      this.setState({\r\n        errorMsg: this.state.modalMsg,\r\n        modalMsg: \"\",\r\n        modalRoute: 0,\r\n        modalFlag: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  onOrder = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      errorMsg: \"\",\r\n      requestDetails: [],\r\n      modalRoute: 0,\r\n      modalFlag: false,\r\n      modalMsg: \"\",\r\n    });\r\n\r\n    let selectedList = [];\r\n    let stateList = this.state.selected;\r\n    let stateListKeys = Object.keys(stateList);\r\n    let key;\r\n    for (key of stateListKeys) {\r\n      if (stateList[key]) {\r\n        selectedList.push(key);\r\n      }\r\n    }\r\n\r\n    if (selectedList && selectedList.length) {\r\n      this.setState({\r\n        selectedList: selectedList,\r\n      });\r\n      for (let partId of selectedList) {\r\n        let obj = this.state.jobparts.find(\r\n          (c) => c.partId === parseInt(partId)\r\n        );\r\n        if (obj && Object.keys(obj).length !== 0)\r\n          if (obj.avlQty < obj.reqQty) {\r\n            this.setState({\r\n              errorMsg: obj.partName + errMsg[\"6\"],\r\n            });\r\n            return;\r\n          }\r\n      }\r\n\r\n      this.orderBackendCall();\r\n    } else {\r\n      this.setState({\r\n        errorMsg: errMsg[\"3\"],\r\n      });\r\n    }\r\n  };\r\n\r\n  handleLoadingClose = (e) => {\r\n    this.setState({ loading: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <div className=\"col-12 col-sm-12 pt-4\">\r\n            <form>\r\n              <p className=\"error-msg\" style={{ color: \"red\" }}>\r\n                {this.state.errorMsg ? this.state.errorMsg : null}\r\n              </p>\r\n              {this.state.jobparts.length > 0 ? (\r\n                <div>\r\n                  <table className=\"table table-hover\">\r\n                    <thead className=\"thead\">\r\n                      <tr>\r\n                        <th></th>\r\n                        <th>Job Name</th>\r\n                        <th>Part Id</th>\r\n                        <th>Part Name</th>\r\n                        <th>Required Quantity</th>\r\n                        <th>Available Quantity</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {this.state.jobparts.map((data) => {\r\n                        return (\r\n                          <tr key={Math.random()}>\r\n                            <td>\r\n                              <input\r\n                                name=\"checkbox\"\r\n                                type=\"checkbox\"\r\n                                onChange={() =>\r\n                                  this.handleCheckbox(data.partId)\r\n                                }\r\n                                checked={\r\n                                  this.state.selected[data.partId] === true\r\n                                }\r\n                              />\r\n                            </td>\r\n                            <td>{data.jobName}</td>\r\n                            <td>{data.partId}</td>\r\n                            <td>{data.partName}</td>\r\n                            <td>{data.reqQty}</td>\r\n                            <td>{data.avlQty}</td>\r\n                          </tr>\r\n                        );\r\n                      })}\r\n                    </tbody>\r\n                  </table>\r\n                  <div className=\"form-group text-center\">\r\n                    <button\r\n                      onClick={this.onOrder}\r\n                      type=\"submit\"\r\n                      className=\"btn btn-info btn-centre\"\r\n                    >\r\n                      Order\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <p>\r\n                  No parts for this job. Kindly contact company Y to add the\r\n                  details.\r\n                </p>\r\n              )}\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <Modal\r\n          show={this.state.loading}\r\n          onHide={this.handleLoadingClose}\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Loading</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>The details are loading please wait....</Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={this.handleLoadingClose}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <Modal\r\n          show={this.state.modalFlag}\r\n          onHide={this.handleModalClose}\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Order Result</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>{this.state.modalMsg}</Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={this.handleModalClose}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(OrderPage);\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport errMsg from \"./errormessages\";\r\nimport CONST from \"./constants\";\r\n\r\nclass SearchHistory extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchHistory: [],\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let url = CONST.COMP_Z_URL + `searchhistory`;\r\n\r\n    await axios\r\n      .get(url)\r\n      .then((res) => {\r\n        this.setState({\r\n          searchHistory: res.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({\r\n          errorMsg: errMsg[\"4\"],\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <p className=\"error-msg\" style={{ color: \"red\" }}>\r\n            {this.state.errorMsg ? this.state.errorMsg : null}\r\n          </p>\r\n          <div className=\"col-12 col-sm-12 pt-4\">\r\n            <table className=\"table table-hover\">\r\n              <thead className=\"thead\">\r\n                <tr>\r\n                  <th>Jobname</th>\r\n                  <th>Date</th>\r\n                  <th>Time</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.state.searchHistory.map((data) => {\r\n                  return (\r\n                    <tr key={Math.random()}>\r\n                      <th>{data.jobName}</th>\r\n                      <td>{data.date}</td>\r\n                      <td>{data.time}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchHistory;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport errMsg from \"./errormessages\";\r\nimport CONST from \"./constants\";\r\n\r\nclass OrderedHistory extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let userId = localStorage.userId;\r\n\r\n    if (!userId) {\r\n      return this.props.history.push(\"/NotFound\");\r\n    }\r\n\r\n    this.state = {\r\n      orderedHistory: [],\r\n      userId: userId,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let url = CONST.COMP_Z_URL + `getOrderedJobs?userId=${this.state.userId}`;\r\n\r\n    await axios\r\n      .get(url)\r\n      .then((res) => {\r\n        this.setState({\r\n          orderedHistory: res.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        if (err && err.response && err.response.data) {\r\n          this.setState({\r\n            errorMsg: err.response.data,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            errorMsg: errMsg[\"4\"],\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    let list = this.state.orderedHistory;\r\n\r\n    if (list && list.length) {\r\n      let i;\r\n      let len = list.length;\r\n      for (i = 0; i < len; i++) {\r\n        let obj = list[i];\r\n        let dateStr = obj.date;\r\n        let date = new Date(dateStr);\r\n        date.setDate(date.getDate() + 1);\r\n        let conv = date.toDateString();\r\n        obj.date = conv;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <p className=\"error-msg\" style={{ color: \"red\" }}>\r\n            {this.state.errorMsg ? this.state.errorMsg : null}\r\n          </p>\r\n          <div className=\"col-12 col-sm-12 pt-4\">\r\n            <table className=\"table table-hover\">\r\n              <thead className=\"thead\">\r\n                <tr>\r\n                  <th>Job Name</th>\r\n                  <th>Part Id</th>\r\n                  <th>Quantity</th>\r\n                  <th>Ordered Date</th>\r\n                  <th>Ordered Time</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {list &&\r\n                  list.map((data) => {\r\n                    return (\r\n                      <tr key={Math.random()}>\r\n                        <th>{data.jobName}</th>\r\n                        <td>{data.partId}</td>\r\n                        <td>{data.qty}</td>\r\n                        <td>{data.date}</td>\r\n                        <td>{data.time}</td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OrderedHistory;\r\n","import React, { Component } from \"react\";\r\n\r\nclass NotFound extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"notfound\">\r\n          The page is not found in the application.\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\r\nimport { Tabs, Tab } from \"react-bootstrap\";\r\nimport OrderPage from \"./OrderPage\";\r\nimport SearchHistory from \"./SearchHistory\";\r\nimport OrderedHistory from \"./OrderedHistory\";\r\nimport NotFound from \"./NotFound\";\r\n\r\nclass HomePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    if (!this.props.location.state) {\r\n      this.props.history.push(\"/NotFound\");\r\n      return;\r\n    }\r\n\r\n    let jobName = this.props.location.state.jobName;\r\n    let userId = this.props.location.state.userId;\r\n\r\n    this.state = {\r\n      jobName: jobName,\r\n      userId: userId,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    if (this.state) {\r\n      const orderObj = {\r\n        jobName: this.state.jobName,\r\n        userId: this.state.userId,\r\n      };\r\n\r\n      return (\r\n        <div>\r\n          <Tabs defaultActiveKey=\"orderPage\" id=\"uncontrolled-tab-example\">\r\n            <Tab eventKey=\"orderPage\" title=\"Order Page\">\r\n              <OrderPage orderObj={orderObj} />\r\n            </Tab>\r\n            <Tab eventKey=\"searchHistory\" title=\"Search History\">\r\n              <SearchHistory />\r\n            </Tab>\r\n            <Tab eventKey=\"orderedHistory\" title=\"Ordered History\">\r\n              <OrderedHistory />\r\n            </Tab>\r\n          </Tabs>\r\n        </div>\r\n      );\r\n    } else {\r\n      this.props.history.push(\"./not-found\");\r\n      return (\r\n        <div>\r\n          <NotFound></NotFound>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport Header from \"./Header\";\r\nimport Search from \"./Search\";\r\nimport GetAll from \"./GetAll\";\r\nimport Login from \"./Login\";\r\nimport HomePage from \"./HomePage\";\r\nimport NotFound from \"./NotFound\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header>\r\n          <Header></Header>\r\n        </header>\r\n        <div className=\"centerContent\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route\r\n              exact\r\n              path=\"/search\"\r\n              render={(props) => <Search {...props}></Search>}\r\n            />\r\n            <Route\r\n              path=\"/getAll\"\r\n              render={(props) => <GetAll {...props}></GetAll>}\r\n            />\r\n            <Route\r\n              path=\"/login/:jobName\"\r\n              render={(props) => <Login {...props}></Login>}\r\n            />\r\n            <Route\r\n              path=\"/homepage\"\r\n              render={(props) => <HomePage {...props}></HomePage>}\r\n            />\r\n            <Route\r\n              path=\"/not-found\"\r\n              render={(props) => <NotFound {...props}></NotFound>}\r\n            ></Route>\r\n            <Redirect to=\"/not-found\"></Redirect>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' },\r\n    })\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then(registration => {\r\n          registration.unregister();\r\n        })\r\n        .catch(error => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }\r\n  ","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { createBrowserHistory } from \"history\";\r\n\r\nconst history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <BrowserRouter history={history}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n","module.exports = {\r\n  \"1\": \"Mandatory fields are missing\",\r\n  \"2\": \"Email address is not valid.\",\r\n  \"3\": \"Please select at least one part to place order\",\r\n  \"4\":\r\n    \"The application faced network issue. Please contact support team for immediate assistance.\",\r\n  \"5\":\r\n    \"The application faced unexpected exception while fetching job details. Please contact support.\",\r\n  \"6\":\r\n    \" part is out of stock. Order cannot be placed right now. Please try after sometime.\",\r\n  \"7\": \"Search field is empty. Kindly enter a jobname to search.\",\r\n  \"8\":\r\n    \"partorders table with jobName, partId, and userId combination already exists\",\r\n  \"9\": \"User has already ordered the part\",\r\n  \"10\":\r\n    \"Job name does not match with the data. Try get all page to select the job.\",\r\n};\r\n","module.exports = {\r\n  //COMP_Z_URL: \"http://localhost:4000/api/\",\r\n  COMP_Z_URL:\r\n    \"https://us-central1-cloudprojects-279901.cloudfunctions.net/companyZ/api/\",\r\n  //COMP_X_URL: \"http://localhost:5000/api/\",\r\n  COMP_X_URL: \"https://enigmatic-everglades-12100.herokuapp.com/api/\",\r\n  //COMP_Y_URL: \"http://localhost:5001/\",\r\n  COMP_Y_URL:\r\n    \"https://us-central1-testproject-277421.cloudfunctions.net/cloudproject_compY/\",\r\n};\r\n"],"sourceRoot":""}