{
	"info": {
		"_postman_id": "546dff54-7cab-4de6-94cf-e3170225fc51",
		"name": "companyY - project",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "all parts",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/parts",
					"host": [
						"{{host}}"
					],
					"path": [
						"parts"
					]
				},
				"description": "Return all the parts from the parts DB"
			},
			"response": []
		},
		{
			"name": "get part by id",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/parts/3",
					"host": [
						"{{host}}"
					],
					"path": [
						"parts",
						"3"
					]
				},
				"description": "Return specific part with id from the parts DB"
			},
			"response": []
		},
		{
			"name": "create part",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"partId\": \"11\",\n    \"partName\": \"partz\",\n    \"qoh\": \"50\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/parts/create",
					"host": [
						"{{host}}"
					],
					"path": [
						"parts",
						"create"
					]
				},
				"description": "Create new part and then store the data into parts DB\nIt will check if the part is exist or not\nParameter need to specify when create new part: partId, partName, qoh"
			},
			"response": []
		},
		{
			"name": "update part",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"partId\": \"3\",\n    \"partName\": \"partz\",\n    \"qoh\": \"200\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/parts/update",
					"host": [
						"{{host}}"
					],
					"path": [
						"parts",
						"update"
					]
				},
				"description": "Update part and then store the data into parts DB\nIt will check if the part is exist or not\nParameter need to specify when update part: partId, partName, qoh"
			},
			"response": []
		},
		{
			"name": "get orders",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/order",
					"host": [
						"{{host}}"
					],
					"path": [
						"order"
					]
				},
				"description": "Return all the partsOrder from the partorderY DB\nDisplayed in a sorted order, first by jobName, then by userId, and then by partId"
			},
			"response": []
		},
		{
			"name": "create order",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"order\": [\n      {\n         \"jobName\": \"job3\",\n         \"partId\": 12,\n         \"userId\": \"user\",\n         \"qty\": 1\n      }\n   ],\n   \"transactionName\": \"t4\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/orders",
					"host": [
						"{{host}}"
					],
					"path": [
						"orders"
					]
				},
				"description": "Create new partsOrder and then store the data into partorderY DB\nParameter need to specify when create new part: jobName, partId, userId, qty"
			},
			"response": []
		},
		{
			"name": "order finish",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"transactionName\": \"t4\",\n   \"operationType\": \"rollback\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/orders/finish/",
					"host": [
						"{{host}}"
					],
					"path": [
						"orders",
						"finish",
						""
					]
				},
				"description": "Create new partsOrder and then store the data into partorderY DB\nParameter need to specify when create new part: jobName, partId, userId, qty"
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}